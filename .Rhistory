knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(rio) #Convocamos el paquete
data=import("Pd3_enpove2022.dta")
View(data)
table(data$P701)
x = 3104 #almacenamos en "x" la frecuencia de nuestro caso de éxito (Sí se sintieron discriminados)
n = 3104 + 7123 #almacenamos en "n" el total de casos
ic_prop = prop.test(x,n)
ic_prop #llamamos a ic_prop para visualizar los resultados
library(dplyr)
library(scales)
indicador = c("P702_1","P702_2","P702_3","P702_4","P702_5","P702_6", "P702_7")
data = data %>%
mutate(suma =  rowSums(across(all_of(indicador)), na.rm = TRUE),
nivel_discriminación = rescale(suma, to = c(0,10)),
nivel_discriminación = ifelse(P701 == "2",NA, nivel_discriminación),
)
data %>%
summarise(media = mean(nivel_discriminación, na.rm = T),
mediana = median(nivel_discriminación,na.rm = T),
sd = sd(nivel_discriminación, na.rm = T),
min = min(nivel_discriminación, na.rm = T),
max = max(nivel_discriminación, na.rm = T))
?rescale
library(dplyr)
library(scales)
indicador = c("P702_1","P702_2","P702_3","P702_4","P702_5","P702_6", "P702_7")
data = data %>%
mutate(suma =  rowSums(across(all_of(indicador)), na.rm = TRUE),
nivel_discriminación = rescale(suma, to = c(1,10)),
nivel_discriminación = ifelse(P701 == "2",NA, nivel_discriminación),
)
data %>%
summarise(media = mean(nivel_discriminación, na.rm = T),
mediana = median(nivel_discriminación,na.rm = T),
sd = sd(nivel_discriminación, na.rm = T),
min = min(nivel_discriminación, na.rm = T),
max = max(nivel_discriminación, na.rm = T))
library(dplyr)
library(scales)
indicador = c("P702_1","P702_2","P702_3","P702_4","P702_5","P702_6", "P702_7")
data = data %>%
mutate(suma =  rowSums(across(all_of(indicador)), na.rm = TRUE),
nivel_discriminación = rescale(suma, to = c(0,10)),
nivel_discriminación = ifelse(P701 == "2",NA, nivel_discriminación),
)
library(dplyr)
library(scales)
indicador = c("P702_1","P702_2","P702_3","P702_4","P702_5","P702_6", "P702_7")
data = data %>%
mutate(suma =  rowSums(across(all_of(indicador)), na.rm = TRUE),
nivel_discriminación = rescale(suma, to = c(0,10)),
nivel_discriminación = ifelse(P701 == "2",NA, nivel_discriminación),
)
data %>%
summarise(media = mean(nivel_discriminación, na.rm = T),
mediana = median(nivel_discriminación,na.rm = T),
sd = sd(nivel_discriminación, na.rm = T),
min = min(nivel_discriminación, na.rm = T),
max = max(nivel_discriminación, na.rm = T))
library(dplyr)
library(scales)
indicador = c("P702_1","P702_2","P702_3","P702_4","P702_5","P702_6", "P702_7")
data = data %>%
mutate(suma =  rowSums(across(all_of(indicador)), na.rm = TRUE),
nivel_discriminación = rescale(suma, to = c(1,10)),
nivel_discriminación = ifelse(P701 == "2",NA, nivel_discriminación),
)
data %>%
summarise(media = mean(nivel_discriminación, na.rm = T),
mediana = median(nivel_discriminación,na.rm = T),
sd = sd(nivel_discriminación, na.rm = T),
min = min(nivel_discriminación, na.rm = T),
max = max(nivel_discriminación, na.rm = T))
library(lsr)
ic_media = ciMean(data$nivel_discriminación, na.rm = TRUE) #con el último argumento indicamos no tomar en consideracion los valores perdidos (NA)
ic_media
library(dplyr)
library(scales)
indicador = c("P702_1","P702_2","P702_3","P702_4","P702_5","P702_6", "P702_7")
data = data %>%
mutate(suma =  rowSums(across(all_of(indicador)), na.rm = TRUE),
nivel_discriminación = rescale(suma, to = c(0,10)),
nivel_discriminación = ifelse(P701 == "2",NA, nivel_discriminación),
)
data %>%
summarise(media = mean(nivel_discriminación, na.rm = T),
mediana = median(nivel_discriminación,na.rm = T),
sd = sd(nivel_discriminación, na.rm = T),
min = min(nivel_discriminación, na.rm = T),
max = max(nivel_discriminación, na.rm = T))
data %>%
summarise(media = mean(nivel_discriminación, na.rm = T),
mediana = median(nivel_discriminación,na.rm = T),
sd = sd(nivel_discriminación, na.rm = T),
min = min(nivel_discriminación, na.rm = T),
max = max(nivel_discriminación, na.rm = T))
library(dplyr)
library(scales)
indicador = c("P702_1","P702_2","P702_3","P702_4","P702_5","P702_6", "P702_7")
data = data %>%
mutate(suma =  rowSums(across(all_of(indicador)), na.rm = TRUE),
nivel_discriminación = rescale(suma, to = c(0,10)),
nivel_discriminación = ifelse(P701 == "2",NA, nivel_discriminación),
)
data %>%
summarise(media = mean(nivel_discriminación, na.rm = T),
mediana = median(nivel_discriminación,na.rm = T),
sd = sd(nivel_discriminación, na.rm = T),
min = min(nivel_discriminación, na.rm = T),
max = max(nivel_discriminación, na.rm = T))
table(data$ESTRATO)
library(dplyr)
data = data %>%
mutate(ESTRATO=factor(ESTRATOS_IOP, levels = (1:5), labels = c("Bajo","Medio bajo","Medio", "Medio alto", "Alto")))
library(dplyr)
data = data %>%
mutate(ESTRATO=factor(ESTRATO, levels = (1:5), labels = c("Bajo","Medio bajo","Medio", "Medio alto", "Alto")))
ic_grupo = data %>%
dplyr::group_by(ESTRATO) %>%
dplyr::summarise(Media = mean(nivel_discriminación, na.rm=T),
min = ciMean(nivel_discriminación, na.rm=T)[1],
max = ciMean(nivel_discriminación, na.rm=T)[2])
ic_grupo
library(ggplot2)
ggplot(ic_grupo, aes(x= ESTRATO, y =Media)) +
geom_errorbar(aes(ymin=min, ymax=max), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Estrato") + ylab("Promedio del nivel de discriminación")+
ylim(30, 140) #indicamos los límites del eje y
ic_grupo = data %>%
dplyr::group_by(ESTRATO) %>%
dplyr::summarise(Media = mean(nivel_discriminación, na.rm=T),
min = ciMean(nivel_discriminación, na.rm=T)[1],
max = ciMean(nivel_discriminación, na.rm=T)[2])
ic_grupo
library(ggplot2)
ggplot(ic_grupo, aes(x= ESTRATO, y =Media)) +
geom_errorbar(aes(ymin=min, ymax=max), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Estrato") + ylab("Promedio del nivel de discriminación")+
ylim(0, 10) #indicamos los límites del eje y
library(ggplot2)
ggplot(ic_grupo, aes(x= ESTRATO, y =Media)) +
geom_errorbar(aes(ymin=min, ymax=max), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Estrato") + ylab("Promedio del nivel de discriminación")+
ylim(0, 5) #indicamos los límites del eje y
library(ggplot2)
ggplot(ic_grupo, aes(x= ESTRATO, y =Media)) +
geom_errorbar(aes(ymin=min, ymax=max), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Estrato") + ylab("Promedio del nivel de discriminación")+
ylim(0, 3) #indicamos los límites del eje y
library(ggplot2)
ggplot(ic_grupo, aes(x= ESTRATO, y =Media)) +
geom_errorbar(aes(ymin=min, ymax=max), width = 0.2)+
geom_text(aes(label=paste(round(Media, 2))), size=4)+
xlab("Estrato") + ylab("Promedio del nivel de discriminación")+
ylim(1, 3) #indicamos los límites del eje y
ci_result <- ciMean(nivel_discriminación, na.rm=T)
ci_result <- ciMean(nivel_discriminacion, na.rm=T)
ci_result <- ciMean(nivel_discriminación, na.rm=T)
library(dplyr)
library(scales)
indicador = c("P702_1","P702_2","P702_3","P702_4","P702_5","P702_6", "P702_7")
data = data %>%
mutate(suma =  rowSums(across(all_of(indicador)), na.rm = TRUE),
nivel_discriminación = rescale(suma, to = c(0,10)),
nivel_discriminación = ifelse(P701 == "2",NA, nivel_discriminación),
)
data %>%
summarise(media = mean(nivel_discriminación, na.rm = T),
mediana = median(nivel_discriminación,na.rm = T),
sd = sd(nivel_discriminación, na.rm = T),
min = min(nivel_discriminación, na.rm = T),
max = max(nivel_discriminación, na.rm = T))
library(lsr)
ic_media = ciMean(data$nivel_discriminación, na.rm = TRUE) #con el último argumento indicamos no tomar en consideracion los valores perdidos (NA)
ic_media
table(data$ESTRATO)
library(dplyr)
data = data %>%
mutate(ESTRATO=factor(ESTRATO, levels = (1:5), labels = c("Bajo","Medio bajo","Medio", "Medio alto", "Alto")))
ic_grupo = data %>%
dplyr::group_by(ESTRATO) %>%
dplyr::summarise(Media = mean(nivel_discriminación, na.rm=T),
min = ciMean(nivel_discriminación, na.rm=T)[1],
max = ciMean(nivel_discriminación, na.rm=T)[2])
ic_grupo
ci_result <- ciMean(nivel_discriminación, na.rm=T)
ci_result <- ciMean(nivel_discriminación, na.rm=T)
library(rio) #Convocamos el paquete
data=import("Pd3_enpove2022.dta")
View(data)
table(data$P701)
x = 3104 #almacenamos en "x" la frecuencia de nuestro caso de éxito (Sí se sintieron discriminados)
n = 3104 + 7123 #almacenamos en "n" el total de casos
ic_prop = prop.test(x,n)
ic_prop #llamamos a ic_prop para visualizar los resultados
knitr::include_graphics("ICmedia.png")
library(dplyr)
library(scales)
indicador = c("P702_1","P702_2","P702_3","P702_4","P702_5","P702_6", "P702_7")
data = data %>%
mutate(suma =  rowSums(across(all_of(indicador)), na.rm = TRUE),
nivel_discriminación = rescale(suma, to = c(0,10)),
nivel_discriminación = ifelse(P701 == "2",NA, nivel_discriminación),
)
data %>%
summarise(media = mean(nivel_discriminación, na.rm = T),
mediana = median(nivel_discriminación,na.rm = T),
sd = sd(nivel_discriminación, na.rm = T),
min = min(nivel_discriminación, na.rm = T),
max = max(nivel_discriminación, na.rm = T))
library(lsr)
ic_media = ciMean(data$nivel_discriminación, na.rm = TRUE) #con el último argumento indicamos no tomar en consideracion los valores perdidos (NA)
ic_media
table(data$ESTRATO)
library(dplyr)
data = data %>%
mutate(ESTRATO=factor(ESTRATO, levels = (1:5), labels = c("Bajo","Medio bajo","Medio", "Medio alto", "Alto")))
ic_grupo = data %>%
dplyr::group_by(ESTRATO) %>%
dplyr::summarise(Media = mean(nivel_discriminación, na.rm=T),
min = ciMean(nivel_discriminación, na.rm=T)[1],
max = ciMean(nivel_discriminación, na.rm=T)[2])
ic_grupo
ic_grupo = data %>%
group_by(ESTRATO) %>%
summarise(Media = mean(nivel_discriminación, na.rm=T),
min = ciMean(nivel_discriminación, na.rm=T)[1],
max = ciMean(nivel_discriminación, na.rm=T)[2])
ic_grupo
View(data)
knitr::include_graphics("pd4-estratos.png")
