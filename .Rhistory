theme_minimal()
library(ggplot2)
ggplot(ic_grupo, aes(x = ESTRATO, y = Media)) +
# Barras sólidas
geom_col(fill = "#00688B", color = "black") +
# Barras de error
geom_errorbar(aes(ymin = min, ymax = max), width = 0.2) +
# Etiqueta de la media
geom_text(aes(label = round(Media, 2)),
vjust = -1, size = 4) +
# Etiqueta del valor mínimo (ligeramente a la derecha)
geom_text(aes(y = min, label = paste("min:", round(min, 2))),
vjust = 1.5, hjust = 1.2, size = 3, color = "white") +
# Etiqueta del valor máximo (ligeramente a la derecha)
geom_text(aes(y = max, label = paste("max:", round(max, 2))),
vjust = -0.5, hjust = 1.3, size = 3, color = "#00688B") +
xlab("Estrato") +
ylab("Promedio del nivel de discriminación") +
ylim(0, max(ic_grupo$max) + 0.5) +
theme_minimal()
knitr::include_graphics("Tabla_contingencia1.png")
knitr::include_graphics("Tabla_contingencia2.png")
knitr::include_graphics("DicPD5.png")
library(rio) #Convocamos el paquete
data=import("PD5_enpove2022.sav")
library(dplyr)
data = data %>%
mutate(estrato = factor(estrato,labels=c("Bajo","Medio bajo","Medio","Medio alto","Alto"))) %>%
mutate(remesas = factor(remesas,labels=c("Sí","No")))
table(data$remesas)
tabla1=table(data$estrato,data$remesas)
tabla1
chisq.test(tabla1)$expected
tablapor1 = tabla1 %>%
prop.table(1) %>%
round(2) #redondear el resultado a 2 decimales
tablapor1
toPlot1 = as.data.frame(tablapor1)
names(toPlot1) = c("Estrato", "Remesa", "Porcentaje")
library(ggplot2)
ggplot(toPlot1, aes(x=Estrato, y=Porcentaje*100, fill=Remesa)) +
geom_bar(position="stack", stat="identity")+ #Stack indica que son barras apiladas
geom_text(aes(label=paste0(Porcentaje*100,"%")),
position = position_stack(vjust = 0.5),
size = 4,
fontface="bold")+
labs(x="Estrato", y="Porcentaje", fill="¿Envía remesa?")+
theme_minimal()
chisq.test(tabla1)
data = data %>%
mutate(trabajo =factor(trabajo,labels=c("Si","No")))
tabla1 = data %>%
filter(!is.na(trabajo)) %>%
group_by(trabajo) %>%
summarise(Freq=n()) %>%
mutate(Porcentaje = (Freq/sum(Freq))*100)
tabla1
ggplot(tabla1, aes(x=trabajo,y=Porcentaje,fill=trabajo))+
geom_bar(stat="identity")+
geom_text(aes(label=paste(round(Porcentaje,1),"%")),vjust=1.30, color="black", size=3)+
ggtitle("Venezolanos en Perú con empleo (%)")+xlab("¿La semana pasada tuvo algún trabajo?")+theme_classic()
data %>%
summarise(minimo=min(ingreso,na.rm = T),
maximo=max(ingreso,na.rm = T),
media=mean(ingreso,na.rm = T),
mediana=median(ingreso,na.rm = T),
sd=sd(ingreso,na.rm = T),
Q1=quantile(ingreso,na.rm = T,0.25),
Q3=quantile(ingreso,na.rm = T,0.75))
data %>%
ggplot(aes(x = ingreso)) +
geom_histogram(color = "black", fill = "hotpink1", bins = 40) +
ggtitle("Salario de la población venezolana en Perú ") +
ylab("Frecuencia")+xlab("Salario")+
geom_vline(xintercept =  mean(data$ingreso, na.rm = TRUE), color = "red", linetype = "dashed", size = 1) + # Línea de la media
geom_vline(xintercept = median(data$ingreso, na.rm = TRUE), color = "grey", linetype = "dashed", size = 1) + # Línea de la mediana
theme_minimal()
tabla1
prop.test(5987,5987+4240)
library(lsr)
data %>%
summarise(media = mean(ingreso,na.rm=T),
Superior = ciMean(ingreso,na.rm=T),
Inferior = ciMean(ingreso,na.rm=T))
data = data %>% mutate(remesas = factor(remesas, labels = c("Si","No")))
grafico = data %>%
filter(!is.na(remesas)) %>%
group_by(remesas) %>%
summarise(media = mean(ingreso,na.rm=T),
Superior = ciMean(ingreso,na.rm=T)[1],
Inferior = ciMean(ingreso,na.rm=T)[2])
grafico
t.test(ingreso~remesas,data)
ggplot(grafico,aes(x=remesas,y=media))+
geom_errorbar(aes(ymin=Inferior,ymax=Superior),width=0.4)+
xlab("Ingreso")+
ylab("¿Envía remesa?")+theme_classic()
table(data$ocupacion)
data = data %>%
mutate(empleado = ifelse(ocupacion == 3,"Empleado","No empleado"))
table(data$empleado)
data = data %>%
mutate(sexo = factor(sexo, labels=c("Hombre","Mujer")))
tabla1=table(data$sexo,data$empleado)
tabla1
chisq.test(tabla1)$expected
tablapor1 = tabla1 %>%
prop.table(1) %>%
round(2) #redondear el resultado a 2 decimales
tablapor1
toPlot1 = as.data.frame(tablapor1)
names(toPlot1) = c("Sexo", "Ocupacion", "Porcentaje")
ggplot(toPlot1, aes(x=Sexo, y=Porcentaje*100, fill=Ocupacion)) +
geom_bar(position="stack", stat="identity")+ #Stack indica que son barras apiladas
geom_text(aes(label=paste0(Porcentaje*100,"%")),
position = position_stack(vjust = 0.5),
size = 4,
fontface="bold")+
labs(x="Sexo", y="Porcentaje", fill="¿Es empleador?")+
theme_minimal()
chisq.test(tabla1)
data %>%
summarise(minimo=min(ingreso,na.rm = T),
maximo=max(ingreso,na.rm = T),
media=mean(ingreso,na.rm = T),
mediana=median(ingreso,na.rm = T),
sd=sd(ingreso,na.rm = T),
Q1=quantile(ingreso,na.rm = T,0.25),
Q3=quantile(ingreso,na.rm = T,0.75))
summary= data %>%
summarise(minimo=min(ingreso,na.rm = T),
maximo=max(ingreso,na.rm = T),
media=mean(ingreso,na.rm = T),
mediana=median(ingreso,na.rm = T),
sd=sd(ingreso,na.rm = T),
Q1=quantile(ingreso,na.rm = T,0.25),
Q3=quantile(ingreso,na.rm = T,0.75))
View(summary)
summary= data %>%
summarise(minimo=min(ingreso,na.rm = T),
maximo=max(ingreso,na.rm = T),
media=mean(ingreso,na.rm = T),
mediana=median(ingreso,na.rm = T),
sd=sd(ingreso,na.rm = T),
Q1=quantile(ingreso,na.rm = T,0.25),
Q3=quantile(ingreso,na.rm = T,0.75))
summary
summary= data %>%
summarise(minimo=min(ingreso,na.rm = T),
maximo=max(ingreso,na.rm = T),
media=mean(ingreso,na.rm = T),
mediana=median(ingreso,na.rm = T),
sd=sd(ingreso,na.rm = T),
Q1=quantile(ingreso,na.rm = T,0.25),
Q3=quantile(ingreso,na.rm = T,0.75))
summary
ggplot(aes(x = ingreso)) +
geom_histogram(color = "black", fill = "hotpink1", bins = 40) +
ggtitle("Salario de la población venezolana en Perú ") +
ylab("Frecuencia")+xlab("Salario")+
geom_vline(xintercept =  mean(data$ingreso, na.rm = TRUE), color = "red", linetype = "dashed", size = 1) + # Línea de la media
geom_vline(xintercept = median(data$ingreso, na.rm = TRUE), color = "grey", linetype = "dashed", size = 1) + # Línea de la mediana
theme_minimal()
data %>%
ggplot(aes(x = ingreso)) +
geom_histogram(color = "black", fill = "hotpink1", bins = 40) +
ggtitle("Salario de la población venezolana en Perú ") +
ylab("Frecuencia")+xlab("Salario")+
geom_vline(xintercept =  mean(data$ingreso, na.rm = TRUE), color = "red", linetype = "dashed", size = 1) + # Línea de la media
geom_vline(xintercept = median(data$ingreso, na.rm = TRUE), color = "grey", linetype = "dashed", size = 1) + # Línea de la mediana
theme_minimal()
setwd("C:/Users/sr.esquivesb/Downloads")
library(foreign)
iop12 <- read.spss("IOP_1112_02_D.sav", to.data.frame = T)
prop.table(table(iop12$P31A))*100
prop.table(table(iop12$P31B))*100
p31ar <- as.numeric(iop12$P31A)
p31br <- as.numeric(iop12$P31B)
p31cr <- as.numeric(iop12$P31C)
p31dr <- as.numeric(iop12$P31D)
table(p31ar)
View(iop12)
iop12 <- read.spss("IOP_1113_01_D.sav", to.data.frame = T)
p31ar <- as.numeric(iop12$P31A)
p31br <- as.numeric(iop12$P31B)
p31cr <- as.numeric(iop12$P31C)
p31dr <- as.numeric(iop12$P31D)
table(p31ar)
library(readxl)
Correspondencia_SITCR3a3_d_Lall <- read_excel("Correspondencia SITCR3a3-d--Lall.xlsx")
View(Correspondencia_SITCR3a3_d_Lall)
library(readr)
location_country <- read_csv("location_country.csv")
View(location_country)
library(readr)
product_sitc <- read_csv("product_sitc.csv")
View(product_sitc)
library(readr)
sitc_country_product_year_4 <- read_csv("sitc_country_product_year_4.csv")
View(sitc_country_product_year_4)
View(sitc_country_product_year_4)
#base integrada: SITC 3 dígitos (convertida de 4) + Correspondencia_SITCR3a3_d_Lall
base_integrada <- sitc_country_product_year_4 %>%
mutate(SITC3 = str_sub(product_sitc_code, 1, 3)) %>% #convierto el SITC de 4 a 3
left_join(Correspondencia_SITCR3a3_d_Lall)
library(tidyverse)
library(openxlsx)
library(ggthemes)
base_integrada <- sitc_country_product_year_4 %>%
mutate(SITC3 = str_sub(product_sitc_code, 1, 3)) %>% #convierto el SITC de 4 a 3
left_join(Correspondencia_SITCR3a3_d_Lall)
base_integrada <- base_integrada %>% left_join(product_sitc)
base_integrada <- base_integrada %>% select (country_iso3_code, product_id, product_sitc_code, product_name, year, export_value, import_value, LDC_description)
EXPORTACIONES_PERU <- base_integrada %>% filter (country_iso3_code == "PER")
EXPORTACIONES_PERU <- EXPORTACIONES_PERU %>% select (year, product_name, LDC_description, export_value)
EXPORTACIONES_PERU <- EXPORTACIONES_PERU %>% arrange (year, LDC_description)
EXPORTACIONES_PERU <- EXPORTACIONES_PERU %>% group_by(year, LDC_description) %>% mutate (export_value_per_grupo = sum(export_value)) %>% ungroup ()
EXPORTACIONES_PERU <- EXPORTACIONES_PERU %>% group_by (year) %>% mutate(total_export_year = sum(export_value)) %>% ungroup ()
EXPORTACIONES_PERU <- EXPORTACIONES_PERU %>% mutate (export_per_grupo_percent = (export_value_per_grupo / total_export_year)*100)
EXPORTACIONES_PERU_Correspondencia_SITCR3a3_d_Lall <- EXPORTACIONES_PERU %>% select (year, LDC_description, export_value_per_grupo, total_export_year, export_per_grupo_percent)
EXPORTACIONES_PERU_Correspondencia_SITCR3a3_d_Lall <- unique(EXPORTACIONES_PERU_Correspondencia_SITCR3a3_d_Lall)
ggplot(EXPORTACIONES_PERU_LALL,
aes(
x = year,
y = export_per_grupo_percent,
fill = factor(LDC_description, exclude = NULL) # incluir NA como categoría
)) +
geom_bar(
stat = "identity",
position = "stack",
width = 1,
color = "white",
linewidth = 0.05
) +
scale_fill_tableau(
palette = "Tableau 20",
name = "Productos por clasificación Lall (año)",
na.value = "grey50"   # SOLO el NA en gris
) +
scale_y_continuous(
labels = scales::percent_format(scale = 1)
) +
scale_x_continuous(
limits = c(1960, 2023),
breaks = seq(1960, 2023, 5)
) +
labs(
title = "Exportaciones Perú 1960-2023, según Clasificación Lall",
x = "Año",
y = "Porcentaje",
caption = "Fuente: GrowthLab-Harvard University (2025), Lall (año)"
) +
theme_minimal(base_size = 12) +
theme(
legend.position = "right",
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 0, hjust = 0.5)
)
ggplot(EXPORTACIONES_PERU_Correspondencia_SITCR3a3_d_Lall,
aes(
x = year,
y = export_per_grupo_percent,
fill = factor(LDC_description, exclude = NULL) # incluir NA como categoría
)) +
geom_bar(
stat = "identity",
position = "stack",
width = 1,
color = "white",
linewidth = 0.05
) +
scale_fill_tableau(
palette = "Tableau 20",
name = "Productos por clasificación Lall (año)",
na.value = "grey50"   # SOLO el NA en gris
) +
scale_y_continuous(
labels = scales::percent_format(scale = 1)
) +
scale_x_continuous(
limits = c(1960, 2023),
breaks = seq(1960, 2023, 5)
) +
labs(
title = "Exportaciones Perú 1960-2023, según Clasificación Lall",
x = "Año",
y = "Porcentaje",
caption = "Fuente: GrowthLab-Harvard University (2025), Lall (año)"
) +
theme_minimal(base_size = 12) +
theme(
legend.position = "right",
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 0, hjust = 0.5)
)
ggplot(EXPORTACIONES_PERU_Correspondencia_SITCR3a3_d_Lall,
aes(
x = year,
y = export_per_grupo_percent,
fill = factor(LDC_description, exclude = NULL) # incluir NA como categoría
)) +
geom_bar(
stat = "identity",
position = "stack",
width = 1,
color = "white",
linewidth = 0.05
) +
scale_fill_tableau(
palette = "Tableau 20",
name = "Productos por clasificación Lall (año)",
na.value = "grey50"   # SOLO el NA en gris
) +
scale_y_continuous(
labels = scales::percent_format(scale = 1)
) +
scale_x_continuous(
limits = c(1962, 2023),
breaks = seq(1962, 2023, 5)
) +
labs(
title = "Exportaciones Perú 1960-2023, según Clasificación Lall",
x = "Año",
y = "Porcentaje",
caption = "Fuente: GrowthLab-Harvard University (2025), Lall (año)"
) +
theme_minimal(base_size = 12) +
theme(
legend.position = "right",
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 0, hjust = 0.5)
)
setwd("C:/Users/sr.esquivesb/Downloads")
knitr::opts_chunk$set(echo = TRUE)
setwd("G:/Mi unidad/QLAB/Sampling/PD2")
#setwd("G:/Mi unidad/QLAB/Sampling/PD2")
library(survey)
library(tidyverse)
library(foreign)
library(haven)
library(dplyr)
cpv = read_dta("cpv2017_pob07mod.dta")
setwd("C:/Users/sr.esquivesb/Documents/GitHub/Estadistica1_sociologia_2025_2.github.io")
knitr::opts_chunk$set(echo = TRUE)
library(haven)
cpv2017_pob07mod <- read_dta("cpv2017_pob07mod.dta")
View(cpv2017_pob07mod)
library(haven)
cpv <- read_dta("cpv2017_pob07mod.dta")
#View(cpv2017_pob07mod)
library(haven)
cpv <- read_dta("cpv2017_pob07mod.dta")
#View(cpv2017_pob07mod)
set.seed(123456) # Clave para poder replicar
mas1 <- cpv[sample(1:nrow(cpv) , size = 994), ]
mas2 <- cpv %>%
slice_sample(prop = 0.001)
mas3 <- cpv %>%
slice_sample(n = 994)
View(mas3)
View(mas2)
View(mas1)
View(cpv)
set.seed(123456)# Clave para poder replicar
mae1 <- cpv %>%
group_by(c5_p2) %>%
slice_sample(prop = 0.001)
View(cpv)
View(cpv)
View(mae1)
summarise(mae1$c5_p2)
sum(mae1$c5_p2)
count(mae1$c5_p2)
summary(mae1$c5_p2)
summary(cpv$c5_p2)
table(mae1$c5_p2)
set.seed(123456) # Clave para poder replicar
mas1 <- cpv[sample(1:nrow(cpv) , size = 994), ]
mas2 <- cpv %>%
slice_sample(prop = 0.001)
mas3 <- cpv %>%
slice_sample(n = 994)
set.seed(123456)# Clave para poder replicar
mae1 <- cpv %>%
group_by(c5_p2) %>%
slice_sample(prop = 0.001)
set.seed(123456) # Clave para poder replicar
data(api) # Ejemplo de Lumley
## MAS ##
mas_d <- svydesign(id = ~1 , fpc = ~fpc , data = apisrs)
svytotal(~enroll , mas_d)
svymean(~enroll , mas_d)
View(apisrs)
set.seed(123456) # Clave para poder replicar
data(api) # Ejemplo de Lumley
## MAS ##
mas_d <- svydesign(id = ~1 , fpc = ~fpc , data = apisrs)
svytotal(~enroll , mas_d)
svymean(~enroll , mas_d)
## MAE ##
set.seed(123456) # Clave para poder replicar
mae_d <- svydesign(id = ~1 , fpc = ~fpc , data = apistrat , strata = ~stype)
svytotal(~enroll , mae_d)
svymean(~enroll , mae_d)
View(apipop)
View(apiclus2)
## MAS
# Extraemos muestra (MAS)
mas4 <- cpv %>%
slice_sample(prop = 0.001)
mas4 = mutate(mas4 , fpc = 994494 , pw = 994494/994 , n = 1 , .keep = "all")
mas4_d = svydesign(id = ~1 , fpc = ~fpc , data = mas4)
mas4_dw = svydesign(id = ~1 , fpc = ~fpc , weights =~pw , data = mas4)
#Promedios
svymean(~c5_p4_1 , mas4_d)
svymean(~c5_p4_1 , mas4_dw)
View(mas4)
## MAS
# Extraemos muestra (MAS)
mas4 <- cpv %>%
slice_sample(prop = 0.001)
mas4 = mutate(mas4 , fpc = 994494 , pw = 994494/994 , n = 1 , .keep = "all")
mas4_d = svydesign(id = ~1 , fpc = ~fpc , data = mas4)
mas4_dw = svydesign(id = ~1 , fpc = ~fpc , weights =~pw , data = mas4)
#Promedios
svymean(~c5_p4_1 , mas4_d)
svymean(~c5_p4_1 , mas4_dw)
## MAS
# Extraemos muestra (MAS)
mas4 <- cpv %>%
slice_sample(prop = 0.001)
mas4 = mutate(mas4 , fpc = 994494 , pw = 994494/994 , n = 1 , .keep = "all")
mas4_d = svydesign(id = ~1 , fpc = ~fpc , data = mas4)
mas4_dw = svydesign(id = ~1 , fpc = ~fpc , weights =~pw , data = mas4)
#Promedios
svymean(~c5_p4_1 , mas4_d)
svymean(~c5_p4_1 , mas4_dw)
View(mas_d)
# Dummy de sexo
cpv = mutate(cpv , sexo = ifelse(c5_p2 == 1 , 1 , 0) , .keep = "all")
# Contamos para fpc (estrato)
cpv %>%
count(sexo)
# Extraemos muestra (MAE)
mae4 <- cpv %>%
group_by(sexo) %>%
slice_sample(prop = 0.001)
mae4 <- mae4 %>%
mutate(fpce = case_when(
sexo == 0 ~ 508712 ,
sexo == 1 ~ 485782) , .keep = "all")
mae4_d = svydesign(id = ~1 , fpc = ~fpce , data = mae4 , strata = ~sexo)
svymean(~c5_p4_1 , mae4_d)
library(rio) #Convocamos el paquete
data=import("PD7_enpove2022.sav")
data = data %>%
mutate(trabajo =factor(trabajo,labels=c("Si","No")))
library(dplyr)
data = data %>%
mutate(trabajo =factor(trabajo,labels=c("Si","No")))
tabla1 = data %>%
filter(!is.na(trabajo)) %>%
group_by(trabajo) %>%
summarise(Freq=n()) %>%
mutate(Porcentaje = (Freq/sum(Freq))*100)
tabla1
ggplot(tabla1, aes(x=trabajo,y=Porcentaje,fill=trabajo))+
geom_bar(stat="identity")+
geom_text(aes(label=paste(round(Porcentaje,1),"%")),vjust=1.30, color="black", size=3)+
ggtitle("Venezolanos en Perú con empleo (%)")+xlab("¿La semana pasada tuvo algún trabajo?")+theme_classic()
library(ggplot2)
ggplot(tabla1, aes(x=trabajo,y=Porcentaje,fill=trabajo))+
geom_bar(stat="identity")+
geom_text(aes(label=paste(round(Porcentaje,1),"%")),vjust=1.30, color="black", size=3)+
ggtitle("Venezolanos en Perú con empleo (%)")+xlab("¿La semana pasada tuvo algún trabajo?")+theme_classic()
summary= data %>%
summarise(minimo=min(ingreso,na.rm = T),
maximo=max(ingreso,na.rm = T),
media=mean(ingreso,na.rm = T),
mediana=median(ingreso,na.rm = T),
sd=sd(ingreso,na.rm = T),
Q1=quantile(ingreso,na.rm = T,0.25),
Q3=quantile(ingreso,na.rm = T,0.75))
summary
data %>%
ggplot(aes(x = ingreso)) +
geom_histogram(color = "black", fill = "hotpink1", bins = 40) +
ggtitle("Salario de la población venezolana en Perú ") +
ylab("Frecuencia")+xlab("Salario")+
geom_vline(xintercept =  mean(data$ingreso, na.rm = TRUE), color = "red", linetype = "dashed", size = 1) + # Línea de la media
geom_vline(xintercept = median(data$ingreso, na.rm = TRUE), color = "grey", linetype = "dashed", size = 1) + # Línea de la mediana
theme_minimal()
tabla1
prop.test(5987,5987+4240)
library(lsr)
data %>%
summarise(media = mean(ingreso,na.rm=T),
Superior = ciMean(ingreso,na.rm=T),
Inferior = ciMean(ingreso,na.rm=T))
data = data %>% mutate(remesas = factor(remesas, labels = c("Si","No")))
grafico = data %>%
filter(!is.na(remesas)) %>%
group_by(remesas) %>%
summarise(media = mean(ingreso,na.rm=T),
Superior = ciMean(ingreso,na.rm=T)[1],
Inferior = ciMean(ingreso,na.rm=T)[2])
grafico
t.test(ingreso~remesas,data)
ggplot(grafico,aes(x=remesas,y=media))+
geom_errorbar(aes(ymin=Inferior,ymax=Superior),width=0.4)+
xlab("Ingreso")+
ylab("¿Envía remesa?")+theme_classic()
